name: Notify Discord on GitHub Activity

on:
  push:
    branches:
      - main
      - dev
      - 'feature/**'
  pull_request:
    types: [opened, closed, reopened]
  issues:
    types: [opened, closed, reopened]
  issue_comment:
    types: [created]
  fork:
  star:
  watch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          EVENT="${{ github.event_name }}"
          ACTOR="${{ github.actor }}"
          REPO="${{ github.repository }}"
          REF="${{ github.ref_name }}"
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          COMMIT_URL="${{ github.event.head_commit.url }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_URL="${{ github.event.issue.html_url }}"
          COMMENTER="${{ github.event.comment.user.login }}"
          FORK_URL="${{ github.event.forkee.html_url }}"

          # Default fallback
          MESSAGE="‚ÑπÔ∏è Event \`$EVENT\` triggered by **$ACTOR**."

          if [ "$EVENT" = "push" ]; then
            MESSAGE="üì¶ **$ACTOR** pushed to \`$REF\` in [$REPO](https://github.com/$REPO)\n**Message:** $COMMIT_MSG\nüîó $COMMIT_URL"
          elif [ "$EVENT" = "pull_request" ]; then
            ACTION="${{ github.event.action }}"
            if [ "$ACTION" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
              ACTION="merged"
            fi
            MESSAGE="üîÄ Pull Request **$PR_TITLE** was **$ACTION** by **$ACTOR**\nüîó $PR_URL"
          elif [ "$EVENT" = "issues" ]; then
            ACTION="${{ github.event.action }}"
            MESSAGE="üêõ Issue **$ISSUE_TITLE** was **$ACTION** by **$ACTOR**\nüîó $ISSUE_URL"
          elif [ "$EVENT" = "issue_comment" ]; then
            MESSAGE="üí¨ **$COMMENTER** commented on an issue\nüîó $ISSUE_URL"
          elif [ "$EVENT" = "fork" ]; then
            MESSAGE="üç¥ **$ACTOR** forked [$REPO](https://github.com/$REPO)\nüîó $FORK_URL"
          elif [ "$EVENT" = "star" ]; then
            MESSAGE="‚≠ê **$ACTOR** starred [$REPO](https://github.com/$REPO)"
          elif [ "$EVENT" = "watch" ]; then
            MESSAGE="üëÅÔ∏è **$ACTOR** is watching [$REPO](https://github.com/$REPO)"
          fi

          # Post to Discord
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"$MESSAGE\"}" \
            $DISCORD_WEBHOOK
