name: Notify Discord on GitHub Activity

on:
  push:
    branches:
      - main
      - dev
      - 'feature/**'
  pull_request:
    types: [opened, closed, reopened]
  issues:
    types: [opened, closed, reopened]
  issue_comment:
    types: [created]
  fork:
  star:
  watch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          EVENT_NAME="${{ github.event_name }}"
          ACTION="${{ github.event.action }}"
          
          # Default fallback message
          PAYLOAD="{\"content\": \"‚ÑπÔ∏è Event \`${EVENT_NAME}\` triggered by **${{ github.actor }}**.\"}"

          if [ "$EVENT_NAME" = "push" ]; then
            PAYLOAD="{\"content\": \"üì¶ **${{ github.actor }}** pushed to \`${{ github.ref_name }}\` in [${{ github.repository }}](https://github.com/${{ github.repository }}).\n\n**Commit message:** ${{ github.event.head_commit.message }}\nüîó [View Commit](${{ github.event.head_commit.url }})\"}"
          elif [ "$EVENT_NAME" = "pull_request" ]; then
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_NUMBER="${{ github.event.pull_request.number }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
            MERGED="${{ github.event.pull_request.merged }}"
            if [ "$ACTION" = "closed" ] && [ "$MERGED" = "true" ]; then
              ACTION="merged"
            fi
            PAYLOAD="{\"content\": \"üîÄ Pull Request #${PR_NUMBER} **${PR_TITLE}** was **${ACTION}** by **${{ github.actor }}**.\nüîó [View PR](${PR_URL})\"}"
          elif [ "$EVENT_NAME" = "issues" ]; then
            ISSUE_TITLE="${{ github.event.issue.title }}"
            ISSUE_NUMBER="${{ github.event.issue.number }}"
            ISSUE_URL="${{ github.event.issue.html_url }}"
            PAYLOAD="{\"content\": \"üêõ Issue #${ISSUE_NUMBER} **${ISSUE_TITLE}** was **${ACTION}** by **${{ github.actor }}**.\nüîó [View Issue](${ISSUE_URL})\"}"
          elif [ "$EVENT_NAME" = "issue_comment" ]; then
            COMMENTER="${{ github.event.comment.user.login }}"
            ISSUE_NUMBER="${{ github.event.issue.number }}"
            ISSUE_URL="${{ github.event.issue.html_url }}"
            PAYLOAD="{\"content\": \"üí¨ **${COMMENTER}** commented on Issue #${ISSUE_NUMBER}.\nüîó [View Comment](${ISSUE_URL})\"}"
          elif [ "$EVENT_NAME" = "fork" ]; then
            FORK_URL="${{ github.event.forkee.html_url }}"
            PAYLOAD="{\"content\": \"üç¥ **${{ github.actor }}** forked [${{ github.repository }}](https://github.com/${{ github.repository }}).\nüîó [View Fork](${FORK_URL})\"}"
          elif [ "$EVENT_NAME" = "star" ]; then
            PAYLOAD="{\"content\": \"‚≠ê **${{ github.actor }}** starred [${{ github.repository }}](https://github.com/${{ github.repository }})\"}"
          elif [ "$EVENT_NAME" = "watch" ]; then
            PAYLOAD="{\"content\": \"üëÅÔ∏è **${{ github.actor }}** is now watching [${{ github.repository }}](https://github.com/${{ github.repository }})\"}"
          fi

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "$PAYLOAD" \
            $DISCORD_WEBHOOK
